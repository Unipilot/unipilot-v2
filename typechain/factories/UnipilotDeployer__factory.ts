/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnipilotDeployer,
  UnipilotDeployerInterface,
} from "../UnipilotDeployer";

const _abi = [
  {
    inputs: [],
    name: "parameters",
    outputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060cf8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638903573014602d575b600080fd5b60336079565b6040805173ffffffffffffffffffffffffffffffffffffffff95861681529385166020850152919093168282015262ffffff909216606082015290519081900360800190f35b60005460015460025473ffffffffffffffffffffffffffffffffffffffff928316929182169181169074010000000000000000000000000000000000000000900462ffffff168456fea164736f6c6343000706000a";

type UnipilotDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnipilotDeployerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnipilotDeployer__factory extends ContractFactory {
  constructor(...args: UnipilotDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnipilotDeployer> {
    return super.deploy(overrides || {}) as Promise<UnipilotDeployer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UnipilotDeployer {
    return super.attach(address) as UnipilotDeployer;
  }
  connect(signer: Signer): UnipilotDeployer__factory {
    return super.connect(signer) as UnipilotDeployer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnipilotDeployerInterface {
    return new utils.Interface(_abi) as UnipilotDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnipilotDeployer {
    return new Contract(address, _abi, signerOrProvider) as UnipilotDeployer;
  }
}
